{"version":3,"file":"customizer.min.js","sources":["../src/customizer.js"],"sourcesContent":["/* eslint-disable no-undef */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     theme_remui/customizer\n * @copyright  (c) 2023 WisdmLabs (https://wisdmlabs.com/)\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @author     Yogesh Shirsath\n */\n\nimport $ from \"jquery\";\nimport Ajax from \"core/ajax\";\nimport Notification from \"core/notification\";\nimport ModalFactory from \"core/modal_factory\";\nimport \"core/modal_save_cancel\";\nimport ModalEvents from \"core/modal_events\";\nimport Utils from \"theme_remui/customizer/utils\";\nimport globalSite from \"theme_remui/customizer/global-site\";\nimport globalBody from \"theme_remui/customizer/global-body\";\nimport globalColors from \"theme_remui/customizer/global-colors\";\nimport globalHeading from \"theme_remui/customizer/global-heading\";\nimport globalButtons from \"theme_remui/customizer/global-buttons\";\nimport headerLogo from \"theme_remui/customizer/header-logo\";\nimport headerSiteDesign from \"theme_remui/customizer/header-design\";\nimport footer from \"theme_remui/customizer/footer\";\nimport additionalSettings from \"theme_remui/customizer/additional-settings\";\nimport iconsettings from \"theme_remui/customizer/icon-settings\";\nimport quickSetup from \"theme_remui/customizer/quicksetup-settings\";\nimport login from \"theme_remui/customizer/login\";\n\n/**\n * Ajax promise requests\n */\nvar PROMISES = {\n    /**\n     * Save settings to database\n     * @param {Array} settings Settings string\n     * @param {Object} options Additional options.\n     * @return {Promise}\n     */\n    SAVE_SETTINGS: (settings, options) => {\n        if (options == undefined) {\n            options = {};\n        }\n        return Ajax.call([{\n            methodname: \"theme_remui_customizer_save_settings\",\n            args: {\n                settings: JSON.stringify(settings),\n                options: JSON.stringify(options)\n            },\n        }])[0];\n    },\n};\n\n/**\n * Customizer panel settings handler.\n */\nvar handlers = [\n    globalSite,\n    globalBody,\n    globalColors,\n    globalHeading,\n    globalButtons,\n    headerLogo,\n    headerSiteDesign,\n    footer,\n    additionalSettings,\n    iconsettings,\n    quickSetup,\n    login,\n];\n\n/**\n * Selectors\n */\nvar SELECTOR = {\n    CUSTOMIZER: \"#customizer\",\n    CONTROLS: \"#customize-controls\",\n    MODE_TOGGLE: \"#customize-controls .mode-toggle\",\n    WRAP: \"#customizer-wrap\",\n    CLOSE_CUSTOMIZER: \".customize-controls-close\",\n    CUSTMIZER_TOGGLE: \".customizer-controls-toggle\",\n    COLOR_SETTING: \".setting-type-color\",\n    PUBLISH: \"#publish-settings\",\n    IFRAME: \"#customizer-frame\",\n    MAIN_OVERLAY: \"#main-overlay\",\n    PANEL_LINK: \"[sidebar-panel-link]\",\n    PANEL_BACK: \".customize-panel-back\",\n    PANEL: \".sidebar-panel\",\n    PANEL_ID: \"panel-id\",\n    PREVIOUS: \"previous\",\n    CURRENT: \"current\",\n    NEXT: \"next\",\n    SETTINGS_RESET: \"#reset-settings\",\n    INPUT_RESET: \".input-reset\",\n    SELECT_RESET: \".select-reset\",\n    CHECKBOX_RESET: \".checkbox-reset\",\n    COLOR_RESET: \".color-reset\",\n    TEXTAREA_RESET: \".textarea-reset\",\n    HTMLEDITOR_RESET: \".htmleditor-reset\",\n    HEADING_TOGGLE: \".heading-toggle\",\n    RANGEINPUT: \".form-range\",\n};\n\n/**\n * Apply settings on iframe load.\n */\nfunction applySettings() {\n    handlers.forEach(handler => handler.apply());\n    // Trigger apply so external js can handle customizer apply.\n    $(document).trigger(\"edwiser.customizer.apply\");\n}\n\n/**\n * Initialize setting change handler.\n */\nfunction initHandlers() {\n    handlers.forEach(handler => handler.init());\n    // Trigger init so external js can handle customizer init.\n    $(document).trigger(\"edwiser.customizer.init\");\n}\n\n/**\n * Field reset handlers.\n */\nfunction resetHandlers() {\n    // Color reset.\n    $(SELECTOR.COLOR_RESET).on(\"click\", function() {\n        let color = $(this).data(\"default\");\n        $(this).closest('.form-group').find(\"input\").spectrum(\"set\", color);\n        $(this).closest('.form-group').find(\"input\").trigger(\"color.changed\", color);\n    });\n\n    // Checkbox reset.\n    $(SELECTOR.CHECKBOX_RESET).on(\"click\", function() {\n        let value = $(this).data(\"default\");\n        $(this).closest('.form-group').find(\"input\").prop(\n            \"checked\",\n            $(this).closest('.form-group').find(\"input\").val() == value\n        );\n        $(this).closest('.form-group').find(\"input\").trigger(\"change\").trigger(\"input\");\n    });\n\n    // Reset select.\n    $(SELECTOR.SELECT_RESET).on(\"click\", function() {\n        let value = $(this).data(\"default\");\n        $(this).closest('.form-group').find(\"select\").val(value).trigger(\"input\").trigger(\"change\");\n    });\n\n    // Reset input.\n    $(SELECTOR.INPUT_RESET).on(\"click\", function() {\n        let value = $(this).data(\"default\");\n        $(this).closest('.form-group').find(\"input\").val(value).trigger(\"input\").trigger(\"change\");\n    });\n\n    // Reset textarea.\n    $(SELECTOR.TEXTAREA_RESET).on(\"click\", function() {\n        let value = $(this).data(\"default\");\n        $(this)\n            .closest('.form-group')\n            .find(\"textarea\")\n            .val(value)\n            .trigger(\"input\")\n            .trigger(\"change\");\n    });\n\n    // Reset htmleditor.\n    $(SELECTOR.HTMLEDITOR_RESET).on(\"click\", function() {\n        let value = $(this).data(\"default\");\n        let textarea = $(this).closest('.form-group').find(\"textarea\");\n        $(this)\n            .closest('.form-group')\n            .find(`#${textarea.attr(\"id\")}editable`)\n            .html(value);\n        textarea.val(value).trigger(\"input\").trigger(\"change\");\n    });\n}\n\n/**\n * Handle page load and link change of iframe.\n * When loaded or link changed, reapplying all settings.\n */\nfunction iframeHandler() {\n    var contentDocument = Utils.getDocument();\n    $(contentDocument).find(\"body\").addClass(\"customizer-opened\");\n    $(contentDocument)\n        .find(\".customizer-editing-icon\")\n        .closest(\"a\")\n        .addClass(\"d-none\")\n        .removeClass(\"d-flex\");\n    $(contentDocument).find(\"#sidebar-setting\").addClass(\"d-none\");\n    $(document).trigger(\"remui-adjust-left-side\");\n    var contentWindow = this.contentWindow;\n    setTimeout(() => {\n        // Change browser url on iframe navigation.\n        window.history.replaceState(\n            \"pagechange\",\n            document.title,\n            M.cfg.wwwroot +\n            \"/theme/remui/customizer.php?url=\" +\n            encodeURI(contentWindow.location.href)\n        );\n\n        // Set current iframe url to customizer close button.\n        $(SELECTOR.CLOSE_CUSTOMIZER).attr(\"href\", contentWindow.location.href);\n\n        // Apply setting on iframe load.\n        applySettings();\n\n        // Hide overlay when iframe loaded.\n        Utils.hideLoader();\n        contentWindow.onbeforeunload = () => {\n            // Show overlay when iframe loaded.\n            Utils.showLoader();\n        };\n    }, 10);\n}\n\n/**\n * Reset all settings.\n * It also shows confirmation modal.\n */\nfunction resetAllSettingHandler() {\n    ModalFactory.create({\n            title: M.util.get_string(\"reset\", \"moodle\"),\n            body: M.util.get_string(\"reset-settings-description\", \"theme_remui\"),\n            type: ModalFactory.types.SAVE_CANCEL,\n        },\n        $(\"#create\")\n    ).done(modal => {\n        modal.show();\n        modal.setSaveButtonText(M.util.get_string(\"yes\", \"moodle\"));\n        var root = modal.getRoot();\n        root.on(ModalEvents.save, () => {\n            $(SELECTOR.MAIN_OVERLAY).removeClass(\"d-none\");\n            PROMISES.SAVE_SETTINGS([{\n                    name: \"customcss\",\n                    value: $('[name=\"customcss\"]').val()\n                }], {\n                    reset: true\n                })\n                .done(() => {\n                    location.reload();\n                })\n                .fail(ex => {\n                    Notification.exception(ex);\n                    $(SELECTOR.MAIN_OVERLAY).addClass(\"d-none\");\n                });\n        });\n    });\n}\n\n/**\n * Publish changes to server.\n */\nfunction publishChanges() {\n    $(SELECTOR.MAIN_OVERLAY).removeClass(\"d-none\");\n    let settings = $(SELECTOR.CONTROLS).serializeArray();\n    settings.forEach((element, index) => {\n        if ($(`[name=\"${element.name}\"]`).is(\".site-colorpicker\")) {\n            element.value = $(`[name=\"${element.name}\"]`)\n                .spectrum(\"get\")\n                .toString();\n            settings[index] = element;\n        }\n    });\n    PROMISES.SAVE_SETTINGS(settings)\n        .done(response => {\n            let obj = {\n                type: ModalFactory.types.ALERT,\n            };\n            if (response.status == false) {\n                obj.title = M.util.get_string(\"error\", \"theme_remui\");\n                obj.body = response.errors;\n            } else {\n                obj.title = M.util.get_string(\"success\", \"moodle\");\n                obj.body = response.message;\n                $(SELECTOR.CONTROLS).data(\"unsaved\", false);\n            }\n            ModalFactory.create(obj, $(\"#create\")).done(modal => {\n                modal.show();\n                $(SELECTOR.MAIN_OVERLAY).addClass(\"d-none\");\n            });\n        })\n        .fail(Notification.exception);\n}\n\n/**\n * Close customizer.\n * @param {DOMEvent} event Click event.\n * @returns {boolean}\n */\nfunction closeCustomizer(event) {\n    if ($(SELECTOR.CONTROLS).data(\"unsaved\") == false) {\n        return true;\n    }\n    event.preventDefault();\n    ModalFactory.create({\n            title: M.util.get_string(\"customizer-close-heading\", \"theme_remui\"),\n            body: M.util.get_string(\n                \"customizer-close-description\",\n                \"theme_remui\"\n            ),\n            type: ModalFactory.types.SAVE_CANCEL,\n        },\n        $(\"#create\")\n    ).done(modal => {\n        modal.show();\n        modal.setSaveButtonText(M.util.get_string(\"yes\", \"moodle\"));\n        var root = modal.getRoot();\n        root.on(ModalEvents.save, () => {\n            window.location = $(SELECTOR.CLOSE_CUSTOMIZER).attr(\"href\");\n        });\n    });\n    return true;\n}\n\n/**\n * Initialize events\n */\nfunction init() {\n    // Initialize customizer only once.\n    if (window[\"customizer-enabled\"] == true) {\n        return;\n    }\n    window[\"customizer-enabled\"] = true;\n\n    $(() => {\n        initHandlers();\n        resetHandlers();\n\n        // Iframe on load event.\n        $(SELECTOR.IFRAME).on(\"load\", iframeHandler);\n\n        $(SELECTOR.SETTINGS_RESET).on(\"click\", resetAllSettingHandler);\n\n        // Open next panel.\n        $(SELECTOR.PANEL_LINK).on(\"click\", function() {\n            $(SELECTOR.PANEL + \"#\" + $(this).data(SELECTOR.PANEL_ID)).addClass(\n                SELECTOR.CURRENT\n            );\n            $(this).closest(SELECTOR.PANEL).removeClass(SELECTOR.CURRENT);\n        });\n\n        // Go back to previous panel.\n        $(SELECTOR.PANEL_BACK).on(\"click\", function() {\n            $(\n                SELECTOR.PANEL +\n                \":not(\" +\n                SELECTOR.PANEL +\n                \"#\" +\n                $(this).data(SELECTOR.PANEL_ID) +\n                \")\"\n            ).removeClass(SELECTOR.CURRENT);\n            $(SELECTOR.PANEL + \"#\" + $(this).data(SELECTOR.PANEL_ID)).addClass(\n                SELECTOR.CURRENT\n            );\n        });\n\n        // Toggle screen mode.\n        $(SELECTOR.MODE_TOGGLE).on(\"click\", function() {\n            $(SELECTOR.CUSTOMIZER)\n                .removeClass(\"mode-desktop mode-tablet mode-mobile\")\n                .addClass(`mode-${$(this).data(\"mode\")}`);\n        });\n\n        // Prevent submission.\n        $(SELECTOR.CONTROLS).on(\"submit\", function(event) {\n            event.preventDefault();\n            return false;\n        });\n\n        // Form change handler.\n        $(`\n            ${SELECTOR.CONTROLS} input[type=\"text\"],\n            ${SELECTOR.CONTROLS} input[type=\"number\"],\n            ${SELECTOR.CONTROLS} input[type=\"checkbox\"]\n            ${SELECTOR.CONTROLS} textarea,\n            ${SELECTOR.CONTROLS} select\n        `).on(\"change\", function() {\n            $(SELECTOR.CONTROLS).data(\"unsaved\", true);\n        });\n        $(`${SELECTOR.CONTROLS} input[type=\"color\"]`).on(\n            \"color.changed\",\n            function() {\n                $(SELECTOR.CONTROLS).data(\"unsaved\", true);\n            }\n        );\n\n        // Submit settings to database.\n        $(SELECTOR.PUBLISH).on(\"click\", publishChanges);\n\n        // Handle customizer close event.\n        $(SELECTOR.CLOSE_CUSTOMIZER).on(\"click\", closeCustomizer);\n\n        // Toggle customizer.\n        $(SELECTOR.CUSTMIZER_TOGGLE).on(\"click\", function() {\n            $(\"body\").toggleClass(\"full-customizer\");\n        });\n\n        // Toggle headings.\n        $(SELECTOR.HEADING_TOGGLE).on(\"click\", function() {\n            $(this).toggleClass(\"collapsed\");\n            $(this).next().slideToggle(\"fast\");\n        });\n\n        // Range slider observer.\n        $(\"body\").on(\"input\", SELECTOR.RANGEINPUT, function() {\n            let id = $(this).attr(\"id\");\n            let value = $(this).val();\n            $(`#${id}-range-value`).text(value);\n        });\n    });\n}\n\nexport {\n    init\n}\n"],"names":["window","handlers","forEach","handler","init","document","trigger","SELECTOR","on","color","this","data","closest","find","spectrum","value","prop","val","textarea","attr","html","iframeHandler","resetAllSettingHandler","addClass","removeClass","event","preventDefault","publishChanges","closeCustomizer","toggleClass","next","slideToggle","id","text","PROMISES","settings","options","undefined","Ajax","call","methodname","args","JSON","stringify","globalSite","globalBody","globalColors","globalHeading","globalButtons","headerLogo","headerSiteDesign","footer","additionalSettings","iconsettings","quickSetup","login","contentDocument","Utils","getDocument","contentWindow","setTimeout","history","replaceState","title","M","cfg","wwwroot","encodeURI","location","href","apply","hideLoader","onbeforeunload","showLoader","create","util","get_string","body","type","ModalFactory","types","SAVE_CANCEL","done","modal","show","setSaveButtonText","getRoot","ModalEvents","save","name","reset","reload","fail","ex","exception","serializeArray","element","index","is","toString","response","obj","ALERT","status","errors","message","Notification"],"mappings":"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"}