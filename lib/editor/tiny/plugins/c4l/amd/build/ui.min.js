define("tiny_c4l/ui",["exports","./common","./modal","core/modal_factory","./components","core/str","./options","core/modal_events"],(function(_exports,_common,_modal,_modal_factory,_components,_str,_options,_modal_events){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Tiny C4L UI.
   *
   * @module      tiny_c4l/ui
   * @copyright   2022 Marc Catal√† <reskit@gmail.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.handleAction=void 0,_modal=_interopRequireDefault(_modal),_modal_factory=_interopRequireDefault(_modal_factory),_modal_events=_interopRequireDefault(_modal_events);let userStudent=!1,previewC4L=!0,allowedComponents=[],Contexts=[];_exports.handleAction=editor=>{userStudent=(0,_options.isStudent)(editor),previewC4L=(0,_options.showPreview)(editor),allowedComponents=(0,_options.getallowedComponents)(editor),displayDialogue(editor)};const displayDialogue=async editor=>{const data=Object.assign({},{}),modal=await _modal_factory.default.create({type:_modal.default.TYPE,templateContext:await getTemplateContext(editor,data),large:!0});previewC4L||editor.targetElm.closest("body").classList.add("c4l-modal-no-preview"),modal.show(),modal.getRoot()[0].addEventListener("click",(event=>{handleModalClick(event,editor,modal)})),modal.getRoot().on(_modal_events.default.hidden,(()=>{handleModalHidden(editor)})),modal.getRoot()[0].querySelector(".c4l-select-filter").addEventListener("change",(event=>{handleModalChange(event,modal)})),previewC4L&&(modal.getRoot()[0].addEventListener("mouseover",(event=>{handleModalMouseEvent(event,modal,!0)})),modal.getRoot()[0].addEventListener("mouseout",(event=>{handleModalMouseEvent(event,modal,!1)})))},handleModalChange=(event,modal)=>{const select=event.target.closest("select");if(select){const currentContext=select.value;if(-1!==Contexts.indexOf(currentContext)){modal.getRoot()[0].querySelectorAll(".c4l-buttons-filters button").forEach((node=>node.classList.remove("c4l-button-filter-enabled")));modal.getRoot()[0].querySelector('.c4l-button-filter[data-filter="'+currentContext+'"]').classList.add("c4l-button-filter-enabled"),showContextButtons(modal,currentContext)}}},handleModalHidden=editor=>{editor.targetElm.closest("body").classList.remove("c4l-modal-no-preview")},handleModalClick=(event,editor,modal)=>{const button=event.target.closest("button");if(button){const selectedButton=button.dataset.id;if(null!==_components.components&&void 0!==_components.components&&_components.components[selectedButton]){const sel=editor.selection.getContent();let componentCode=_components.components[selectedButton].code;const placeholder=sel.length>0?sel:_components.components[selectedButton].text,timestamp=(new Date).getTime(),randomId=Math.round(1e5*Math.random())+"-"+timestamp,newNode=document.createElement("span");newNode.dataset.id=randomId,newNode.innerHTML=placeholder,componentCode=componentCode.replace("{{PLACEHOLDER}}",newNode.outerHTML),editor.selection.setContent(componentCode);const nodeSel=editor.dom.select('span[data-id="'+randomId+'"]');null!=nodeSel&&nodeSel[0]&&editor.selection.select(nodeSel[0]),modal.destroy(),editor.focus()}else{const currentContext=button.dataset.filter;if(-1!==Contexts.indexOf(currentContext)){modal.getRoot()[0].querySelectorAll(".c4l-buttons-filters button").forEach((node=>node.classList.remove("c4l-button-filter-enabled"))),button.classList.add("c4l-button-filter-enabled");modal.getRoot()[0].querySelector(".c4l-select-filter").selectedIndex=Contexts.indexOf(currentContext),showContextButtons(modal,currentContext)}}}},handleModalMouseEvent=(event,modal,show)=>{const isPreview=event.target.classList.contains("c4lt-dialog-button"),button=event.target.closest("button");if(isPreview&&button){const selectedButton=button.dataset.id,node=modal.getRoot()[0].querySelector('div[data-id="code-preview-'+selectedButton+'"]'),previewDefault=modal.getRoot()[0].querySelector('div[data-id="code-preview-default"]');node&&(show?(previewDefault.classList.toggle("c4l-hidden"),node.classList.toggle("c4l-hidden")):(node.classList.toggle("c4l-hidden"),previewDefault.classList.toggle("c4l-hidden")))}},getTemplateContext=async(editor,data)=>Object.assign({},{elementid:editor.id,buttons:await getButtons(editor),filters:await getFilters(),preview:previewC4L},data),getFilters=async()=>{const filters=[],stringValues=await(0,_str.get_strings)(Contexts.map((key=>({key:key,component:_common.component}))));return Contexts.map(((context,index)=>{filters.push({name:stringValues[index],type:context,filterClass:0===index?"c4l-button-filter-enabled":""})})),filters},getButtons=async editor=>{const buttons=[],strings=await getAllStrings(),sel=editor.selection.getContent();let componentCode="",placeholder="";return _components.components.map(((component,index)=>{(!userStudent||userStudent&&allowedComponents.includes(component.name))&&(previewC4L&&(placeholder=sel.length>0?sel:component.text,componentCode=component.code,componentCode=componentCode.replace("{{PLACEHOLDER}}",placeholder)),-1===Contexts.indexOf(component.type)&&Contexts.push(component.type),buttons.push({id:index,name:strings.get(component.name),type:component.type,imageClass:component.imageClass,htmlcode:componentCode}),0!==Contexts.indexOf(component.type)&&(buttons[buttons.length-1].imageClass+=" c4l-hidden"))})),buttons},showContextButtons=(modal,context)=>{const showNodes=modal.getRoot()[0].querySelectorAll('button[data-type="'+context+'"]'),hideNodes=modal.getRoot()[0].querySelectorAll('button[data-type]:not([data-type="'+context+'"])');showNodes.forEach((node=>node.classList.remove("c4l-hidden"))),hideNodes.forEach((node=>node.classList.add("c4l-hidden")))},getAllStrings=async()=>{const keys=[];_components.components.map((element=>keys.push(element.name)));const stringValues=await(0,_str.get_strings)(keys.map((key=>({key:key,component:_common.component}))));return new Map(keys.map(((key,index)=>[key,stringValues[index]])))}}));

//# sourceMappingURL=ui.min.js.map