{"version":3,"file":"options.min.js","sources":["../src/options.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Options helper for C4L plugin.\n *\n * @module      tiny_c4l/options\n * @copyright   2022 Marc Catal√† <reskit@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getPluginOptionName} from 'editor_tiny/options';\nimport {pluginName} from './common';\n\nconst isstudentName = getPluginOptionName(pluginName, 'isstudent');\nconst allowedcompsName = getPluginOptionName(pluginName, 'allowedcomps');\nconst showpreviewName = getPluginOptionName(pluginName, 'showpreview');\nconst viewc4lName = getPluginOptionName(pluginName, 'viewc4l');\n\nexport const register = (editor) => {\n    const registerOption = editor.options.register;\n\n    registerOption(allowedcompsName, {\n        processor: 'array',\n        \"default\": [],\n    });\n\n    registerOption(isstudentName, {\n        processor: 'boolean',\n        \"default\":  false,\n    });\n\n    registerOption(showpreviewName, {\n        processor: 'boolean',\n        \"default\":  true,\n    });\n\n    registerOption(viewc4lName, {\n        processor: 'boolean',\n        \"default\":  true,\n    });\n};\n\n/**\n * Get the permissions configuration for the Tiny C4L plugin.\n *\n * @param {TinyMCE} editor\n * @returns {object}\n */\nexport const isC4LVisible = (editor) => editor.options.get(viewc4lName);\n\n/**\n * Get whether user is a student configuration for the Tiny C4L plugin.\n *\n * @param {TinyMCE} editor\n * @returns {object}\n */\nexport const isStudent = (editor) => editor.options.get(isstudentName);\n\n/**\n * Get the preview visibility configuration for the Tiny C4L plugin.\n *\n * @param {TinyMCE} editor\n * @returns {object}\n */\nexport const showPreview = (editor) => editor.options.get(showpreviewName);\n\n/**\n * Get components allowed at students configuration for the Tiny C4L plugin.\n *\n * @param {TinyMCE} editor\n * @returns {object}\n */\nexport const getallowedComponents = (editor) => editor.options.get(allowedcompsName);\n"],"names":["isstudentName","pluginName","allowedcompsName","showpreviewName","viewc4lName","editor","registerOption","options","register","processor","get"],"mappings":";;;;;;;;MA0BMA,eAAgB,gCAAoBC,mBAAY,aAChDC,kBAAmB,gCAAoBD,mBAAY,gBACnDE,iBAAkB,gCAAoBF,mBAAY,eAClDG,aAAc,gCAAoBH,mBAAY,6BAE3BI,eACfC,eAAiBD,OAAOE,QAAQC,SAEtCF,eAAeJ,iBAAkB,CAC7BO,UAAW,gBACA,KAGfH,eAAeN,cAAe,CAC1BS,UAAW,mBACC,IAGhBH,eAAeH,gBAAiB,CAC5BM,UAAW,mBACC,IAGhBH,eAAeF,YAAa,CACxBK,UAAW,mBACC,2BAUSJ,QAAWA,OAAOE,QAAQG,IAAIN,gCAQjCC,QAAWA,OAAOE,QAAQG,IAAIV,oCAQ5BK,QAAWA,OAAOE,QAAQG,IAAIP,+CAQrBE,QAAWA,OAAOE,QAAQG,IAAIR"}