{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny C4L UI.\n *\n * @module      tiny_c4l/ui\n * @copyright   2022 Marc Catal√† <reskit@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {component} from './common';\nimport C4LModal from './modal';\nimport ModalFactory from 'core/modal_factory';\nimport {components as Components} from './components';\nimport {get_strings as getStrings} from 'core/str';\nimport {\n    isStudent,\n    getallowedComponents,\n    showPreview\n} from './options';\nimport ModalEvents from 'core/modal_events';\n\nlet userStudent = false;\nlet previewC4L = true;\nlet allowedComponents = [];\nlet Contexts = [];\n\n/**\n * Handle action\n * @param {TinyMCE} editor\n */\nexport const handleAction = (editor) => {\n    userStudent = isStudent(editor);\n    previewC4L = showPreview(editor);\n    allowedComponents = getallowedComponents(editor);\n    displayDialogue(editor);\n};\n\n/**\n * Display modal\n * @param  {TinyMCE} editor\n */\nconst displayDialogue = async(editor) => {\n    const data = Object.assign({}, {});\n\n    // Show modal with buttons.\n    const modal = await ModalFactory.create({\n        type: C4LModal.TYPE,\n        templateContext: await getTemplateContext(editor, data),\n        large: true,\n    });\n\n    // Set modal size when no preview.\n    if (!previewC4L) {\n        editor.targetElm.closest('body').classList.add('c4l-modal-no-preview');\n    }\n    modal.show();\n\n    // Event listeners.\n    modal.getRoot()[0].addEventListener('click', (event) => {\n        handleModalClick(event, editor, modal);\n    });\n    modal.getRoot().on(ModalEvents.hidden, () => {\n        handleModalHidden(editor);\n    });\n    modal.getRoot()[0].querySelector('.c4l-select-filter').addEventListener('change', (event) => {\n       handleModalChange(event, modal);\n    });\n    if (previewC4L) {\n        modal.getRoot()[0].addEventListener('mouseover', (event) => {\n            handleModalMouseEvent(event, modal, true);\n        });\n        modal.getRoot()[0].addEventListener('mouseout', (event) => {\n            handleModalMouseEvent(event, modal, false);\n        });\n    }\n};\n\n/**\n * Handle a change within filter select.\n *\n * @param {MouseEvent} event The change event\n * @param {obj} modal\n */\nconst handleModalChange = (event, modal) => {\n    const select = event.target.closest('select');\n\n    if (select) {\n        const currentContext = select.value;\n        if (Contexts.indexOf(currentContext) !== -1) {\n            // Select current button.\n            const buttons = modal.getRoot()[0].querySelectorAll('.c4l-buttons-filters button');\n            buttons.forEach(node => node.classList.remove('c4l-button-filter-enabled'));\n            const button = modal.getRoot()[0].querySelector('.c4l-button-filter[data-filter=\"' + currentContext + '\"]');\n            button.classList.add('c4l-button-filter-enabled');\n\n            // Show/hide component buttons.\n            showContextButtons(modal, currentContext);\n        }\n    }\n};\n\n/**\n * Handle when closing the Modal.\n *\n * @param {obj} editor\n */\nconst handleModalHidden = (editor) => {\n    editor.targetElm.closest('body').classList.remove('c4l-modal-no-preview');\n};\n\n/**\n * Handle a click within the Modal.\n *\n * @param {MouseEvent} event The click event\n * @param {obj} editor\n * @param {obj} modal\n */\nconst handleModalClick = (event, editor, modal) => {\n    const button = event.target.closest('button');\n\n    if (button) {\n        const selectedButton = button.dataset.id;\n\n        // Component button.\n        if (Components?.[selectedButton]) {\n            const sel = editor.selection.getContent();\n            let componentCode = Components[selectedButton].code;\n            const placeholder = (sel.length > 0 ? sel : Components[selectedButton].text);\n\n            // Create a new node to replace the placeholder.\n            const timestamp = new Date().getTime();\n            const randomId = Math.round(Math.random() * 100000) + '-' + timestamp;\n            const newNode = document.createElement('span');\n            newNode.dataset.id = randomId;\n            newNode.innerHTML = placeholder;\n            componentCode = componentCode.replace('{{PLACEHOLDER}}', newNode.outerHTML);\n\n            // Sets new content.\n            editor.selection.setContent(componentCode);\n\n            // Select text.\n            const nodeSel = editor.dom.select('span[data-id=\"' + randomId + '\"]');\n            if (nodeSel?.[0]) {\n                editor.selection.select(nodeSel[0]);\n            }\n\n            modal.destroy();\n            editor.focus();\n        } else {\n            const currentContext = button.dataset.filter;\n            // Filter button.\n            if (Contexts.indexOf(currentContext) !== -1) {\n                // Select current button.\n                const buttons = modal.getRoot()[0].querySelectorAll('.c4l-buttons-filters button');\n                buttons.forEach(node => node.classList.remove('c4l-button-filter-enabled'));\n                button.classList.add('c4l-button-filter-enabled');\n\n                // Select current option in select.\n                const select = modal.getRoot()[0].querySelector('.c4l-select-filter');\n                select.selectedIndex = Contexts.indexOf(currentContext);\n\n                // Show/hide component buttons.\n                showContextButtons(modal, currentContext);\n            }\n        }\n    }\n};\n\n/**\n * Handle a mouse event within the Modal.\n *\n * @param {MouseEvent} event The click event\n * @param {obj} modal\n * @param {bool} show\n */\nconst handleModalMouseEvent = (event, modal, show) => {\n    const isPreview = event.target.classList.contains('c4lt-dialog-button');\n    const button = event.target.closest('button');\n\n    if (isPreview && button) {\n        const selectedButton = button.dataset.id;\n        const node = modal.getRoot()[0].querySelector('div[data-id=\"code-preview-' + selectedButton + '\"]');\n        const previewDefault = modal.getRoot()[0].querySelector('div[data-id=\"code-preview-default\"]');\n\n        if (node) {\n            if (show) {\n                previewDefault.classList.toggle('c4l-hidden');\n                node.classList.toggle('c4l-hidden');\n            } else {\n                node.classList.toggle('c4l-hidden');\n                previewDefault.classList.toggle('c4l-hidden');\n            }\n        }\n    }\n};\n\n/**\n * Get the template context for the dialogue.\n *\n * @param {Editor} editor\n * @param {object} data\n * @returns {object} data\n */\nconst getTemplateContext = async(editor, data) => {\n    return Object.assign({}, {\n        elementid: editor.id,\n        buttons: await getButtons(editor),\n        filters: await getFilters(),\n        preview: previewC4L,\n    }, data);\n};\n\n/**\n * Get the C4L filters for the dialogue.\n *\n * @returns {object} data\n */\nconst getFilters = async() => {\n    const filters = [];\n    const stringValues = await getStrings(Contexts.map((key) => ({key, component})));\n\n    // Iterate over contexts.\n    Contexts.map((context, index) => {\n        filters.push({\n            name: stringValues[index],\n            type: context,\n            filterClass: index === 0 ? 'c4l-button-filter-enabled' : '',\n        });\n    });\n\n    return filters;\n};\n\n/**\n * Get the C4L buttons for the dialogue.\n *\n * @param {Editor} editor\n * @returns {object} data\n */\nconst getButtons = async(editor) => {\n    const buttons = [];\n    const strings = await getAllStrings();\n    const sel = editor.selection.getContent();\n    let componentCode = '';\n    let placeholder = '';\n\n    // Iterate over components.\n    Components.map((component, index) => {\n        if (!userStudent || (userStudent && allowedComponents.includes(component.name))) {\n            if (previewC4L) {\n                placeholder = (sel.length > 0 ? sel : component.text);\n                componentCode = component.code;\n                componentCode = componentCode.replace('{{PLACEHOLDER}}', placeholder);\n            }\n\n            // Save contexts.\n            if (Contexts.indexOf(component.type) === -1) {\n                Contexts.push(component.type);\n            }\n\n            buttons.push({\n                id: index,\n                name: strings.get(component.name),\n                type: component.type,\n                imageClass: component.imageClass,\n                htmlcode: componentCode,\n            });\n\n            // Add class to hide button.\n            if (Contexts.indexOf(component.type) !== 0) {\n                buttons[buttons.length - 1].imageClass += ' c4l-hidden';\n            }\n        }\n    });\n\n    return buttons;\n};\n\n/**\n * Show/hide buttons depend on selected context.\n * @param  {object} modal\n * @param  {String} context\n */\nconst showContextButtons = (modal, context) => {\n    const showNodes = modal.getRoot()[0].querySelectorAll('button[data-type=\"' + context + '\"]');\n    const hideNodes = modal.getRoot()[0].querySelectorAll('button[data-type]:not([data-type=\"' + context + '\"])');\n\n    showNodes.forEach(node => node.classList.remove('c4l-hidden'));\n    hideNodes.forEach(node => node.classList.add('c4l-hidden'));\n};\n\n/**\n * Get language strings.\n *\n * @return {object} Language strings\n */\nconst getAllStrings = async() => {\n    const keys = [];\n\n    Components.map(element => keys.push(element.name));\n\n    const stringValues = await getStrings(keys.map((key) => ({key, component})));\n    return new Map(keys.map((key, index) => ([key, stringValues[index]])));\n};\n"],"names":["userStudent","previewC4L","allowedComponents","Contexts","editor","displayDialogue","async","data","Object","assign","modal","ModalFactory","create","type","C4LModal","TYPE","templateContext","getTemplateContext","large","targetElm","closest","classList","add","show","getRoot","addEventListener","event","handleModalClick","on","ModalEvents","hidden","handleModalHidden","querySelector","handleModalChange","handleModalMouseEvent","select","target","currentContext","value","indexOf","querySelectorAll","forEach","node","remove","showContextButtons","button","selectedButton","dataset","id","Components","sel","selection","getContent","componentCode","code","placeholder","length","text","timestamp","Date","getTime","randomId","Math","round","random","newNode","document","createElement","innerHTML","replace","outerHTML","setContent","nodeSel","dom","destroy","focus","filter","selectedIndex","isPreview","contains","previewDefault","toggle","elementid","buttons","getButtons","filters","getFilters","preview","stringValues","map","key","component","context","index","push","name","filterClass","strings","getAllStrings","includes","get","imageClass","htmlcode","showNodes","hideNodes","keys","element","Map"],"mappings":"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"}